protocol ahb64

  ports 
    data    out 32 haddr
    control out 2 htrans
    control out 1 hwrite 
    control out 3 hsize 
    control out 4 hburst
    data    out 64 hwdata

    data    in 64 hrdata
    control in 1 hready
    control in 1 hresp # need to implement
  endports 

  map hburst begin
    0 : 0
    1 : 3
    2 : 7
    3 : 15
  end

  map hsize begin
    0 : 8
    1 : 16
    2 : 32
    3 : 64
    4 : 128
    5 : 256
    6 : 512
    7 : 1024
  end

  behavior
    generate itr = hburst : 0 begin
    + @(hready(1), htrans(2)) { send( haddr(offset=8, id=itr) ) }
    end
  endbehavior

  behavior
    generate itr = hburst : 0 begin
    + @(hready(1), htrans(2), hwrite(1)) { send( hwdata(range=64, id=itr, dep=haddr(itr)) ) }
    end 
  endbehavior

  behavior
    generate itr = hburst : 0 begin
    + @(hready(1), htrans(2), hwrite(0)) { rec( hrdata(range=64, id=itr, dep=haddr(itr)) ) }
    end
  endbehavior

endprotocol
